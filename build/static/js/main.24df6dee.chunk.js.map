{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","latitude","longitude","zoom","width","window","innerWidth","height","innerHeight","viewport","setViewport","mapboxApiAccessToken","mapStyle","onViewportChange","newView","jesusData","map","jesusEvent","geometry","coordinates","name","src","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2bAIe,SAASA,IAEtB,MAA8BC,mBAAS,CACrCC,SAAU,OACVC,UAAW,QACXC,KAAM,EACNC,MAAOC,OAAOC,WACdC,OAAQF,OAAOG,cALjB,mBAAKC,EAAL,KAAeC,EAAf,KAQA,OACE,eAAC,IAAD,2BACMD,GADN,IAEEE,qBAAsB,+FACtBC,SAAS,sDACTC,iBAAkB,SAACC,GACjBJ,EAAYI,IALhB,4BAWGC,IAAmBC,KAAI,SAACC,GAAD,OACtB,eAAC,IAAD,CAA8BhB,SAAUgB,EAAWC,SAASC,YAAY,GAAIjB,UAAWe,EAAWC,SAASC,YAAY,GAAvH,UACE,8BAAMF,EAAWG,OACjB,iCACE,qBAAKC,IAAI,oBAAoBC,IAAM,sBAH1BL,EAAWG,aC3BhC,IAYeG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACnC,EAAD,MAEFoC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.24df6dee.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport ReactMapGL, { Marker } from \"react-map-gl\";\nimport * as jesusData from \"./data/jesus-life.json\";\n\nexport default function App() {\n\n  let [viewport, setViewport] = useState({\n    latitude: 31.7030,\n    longitude: 35.1955,\n    zoom: 1,\n    width: window.innerWidth,\n    height: window.innerHeight\n  })\n\n  return (\n    <ReactMapGL\n      {...viewport}\n      mapboxApiAccessToken={\"pk.eyJ1Ijoic2NydXo2OTM4IiwiYSI6ImNrdjN5d3AwcDNhMTkyd3A2dWtodnR5dnYifQ.W_HLl84L1OXwBiqbxnFvhg\"}\n      mapStyle=\"mapbox://styles/scruz6938/ckv417krm0ih114pk04vfamus\"\n      onViewportChange={(newView) => {\n        setViewport(newView);\n      }}\n    >\n\n        //dummy markers\n\n      {jesusData.features.map((jesusEvent) => (\n        <Marker key={jesusEvent.name} latitude={jesusEvent.geometry.coordinates[0]} longitude={jesusEvent.geometry.coordinates[1]}>\n          <div>{jesusEvent.name}</div>\n          <button>\n            <img src=\"/public/place.png\" alt = \"Location Icon\"></img>\n          </button>\n          \n        </Marker>\n      ))}\n\n    </ReactMapGL>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useRef, useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}